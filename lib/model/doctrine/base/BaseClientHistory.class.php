<?php

/**
 * BaseClientHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property text $host
 * @property text $meltdown
 * @property text $reactor
 * @property integer $user_id
 * @property text $_session_id
 * 
 * @method text          getHost()        Returns the current record's "host" value
 * @method text          getMeltdown()    Returns the current record's "meltdown" value
 * @method text          getReactor()     Returns the current record's "reactor" value
 * @method integer       getUserId()      Returns the current record's "user_id" value
 * @method text          get_sessionId()  Returns the current record's "_session_id" value
 * @method ClientHistory setHost()        Sets the current record's "host" value
 * @method ClientHistory setMeltdown()    Sets the current record's "meltdown" value
 * @method ClientHistory setReactor()     Sets the current record's "reactor" value
 * @method ClientHistory setUserId()      Sets the current record's "user_id" value
 * @method ClientHistory set_sessionId()  Sets the current record's "_session_id" value
 * 
 * @package    edgeworld
 * @subpackage model
 * @author     BRIGADA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientHistory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client_history');
        $this->hasColumn('host', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('meltdown', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('reactor', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('_session_id', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}