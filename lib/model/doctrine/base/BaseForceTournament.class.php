<?php

/**
 * BaseForceTournament
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property text $dates
 * @property integer $sector
 * @property text $type
 * @property integer $end_at
 * @property array $daily_prizing
 * @property array $bout_prizing
 * @property array $challenge_prizing
 * @property array $active_calculations
 * @property array $value_adjusments
 * @property Doctrine_Collection $ForceLeaderboard
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method text                getDates()               Returns the current record's "dates" value
 * @method integer             getSector()              Returns the current record's "sector" value
 * @method text                getType()                Returns the current record's "type" value
 * @method integer             getEndAt()               Returns the current record's "end_at" value
 * @method array               getDailyPrizing()        Returns the current record's "daily_prizing" value
 * @method array               getBoutPrizing()         Returns the current record's "bout_prizing" value
 * @method array               getChallengePrizing()    Returns the current record's "challenge_prizing" value
 * @method array               getActiveCalculations()  Returns the current record's "active_calculations" value
 * @method array               getValueAdjusments()     Returns the current record's "value_adjusments" value
 * @method Doctrine_Collection getForceLeaderboard()    Returns the current record's "ForceLeaderboard" collection
 * @method ForceTournament     setId()                  Sets the current record's "id" value
 * @method ForceTournament     setDates()               Sets the current record's "dates" value
 * @method ForceTournament     setSector()              Sets the current record's "sector" value
 * @method ForceTournament     setType()                Sets the current record's "type" value
 * @method ForceTournament     setEndAt()               Sets the current record's "end_at" value
 * @method ForceTournament     setDailyPrizing()        Sets the current record's "daily_prizing" value
 * @method ForceTournament     setBoutPrizing()         Sets the current record's "bout_prizing" value
 * @method ForceTournament     setChallengePrizing()    Sets the current record's "challenge_prizing" value
 * @method ForceTournament     setActiveCalculations()  Sets the current record's "active_calculations" value
 * @method ForceTournament     setValueAdjusments()     Sets the current record's "value_adjusments" value
 * @method ForceTournament     setForceLeaderboard()    Sets the current record's "ForceLeaderboard" collection
 * 
 * @package    edgeworld
 * @subpackage model
 * @author     BRIGADA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForceTournament extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('force_tournament');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('dates', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('sector', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('end_at', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('daily_prizing', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('bout_prizing', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('challenge_prizing', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('active_calculations', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('value_adjusments', 'array', null, array(
             'type' => 'array',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ForceLeaderboard', array(
             'local' => 'id',
             'foreign' => 'tournament_id'));
    }
}